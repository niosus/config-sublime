{
     // Where should clang search for headers
     // These will be appended to build with `-I` flag each
    "include_dirs" : [
                        "$project_base_path",
                        ],

    // set the standard library flag.
    "std_flag" : "-std=c++11",

    // search for .clang_complete file up the tree. Use includes from it if found
    "search_clang_complete_file": true,

    // triggers for auto-completion
    "triggers" : [ ".", "->", "::", " "],

    // pick the clang binary used by the plugin. This is used to determine the
    // version of the plugin and pick correct libclang bindings.
    "clang_binary" : "clang++",

    // make plugin verbose
    "verbose" : true,

    // add folder with current file with `-I` flag
    "include_file_folder" : true,

    // add parent folder of the current file's one with `-I` flag
    "include_file_parent_folder" : true,

    // ignore triggers and try to complete after each character
    // WARNING: can be very slow
    "autocomplete_all" : false,

    // hide the completions generated by other plugins
    "hide_default_completions": false,

    // add these to CMAKE_PREFIX_PATH. Needed if you have an esoteric build system
    "cmake_prefix_paths": [
            "~/Code/catkin_ws/devel",
            "/opt/ros/indigo"],

    "show_type_info": true
}
